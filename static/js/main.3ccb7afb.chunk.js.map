{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","CardList","console","log","robots","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,EAAO,SAACC,GACjB,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACpB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCJbC,G,MAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAEZ,qBAAKC,UAAU,YAAf,SACOD,EAAMW,OAAOC,KAAI,SAAAR,GAAK,OACvB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCNdQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BAAK,uBAAOd,UAAU,SAASe,KAAK,SACpCF,YAAaA,EACbG,SAAUF,QCmCHG,E,kDApCb,aAAc,IAAD,8BACX,gBAcFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJJ,E,qDASb,WAAqB,IAAD,OAClBI,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,OAAQkB,S,oBAOxC,WACE,MAA8BC,KAAKN,MAA5Bb,EAAP,EAAOA,OAAQU,EAAf,EAAeA,YACTU,EAAiBpB,EAAOqB,QAAO,SAAA5B,GAAK,OACxCA,EAAME,KAAK2B,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAKhC,UAAU,MAAf,UACE,gDACF,cAAC,EAAD,CAAWa,YAAY,gBACrBC,aAAce,KAAKf,eACrB,cAAC,EAAD,CAAUJ,OAAQoB,W,GA9BNI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ccb7afb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n      <div className='card-container'>\r\n          <img alt='robot' src={`https://robohash.org/${props.robot.id}?set=set2&size=180x180`}/>\r\n          <h2>{props.robot.name}</h2>\r\n          <p>{props.robot.email}</p>\r\n      </div>      \r\n    );\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\n    return (\r\n    <div className='card-list'>\r\n          {props.robots.map(robot =>   \r\n          <Card key={robot.id} robot={robot}></Card>\r\n          )\r\n        }\r\n    </div>)\r\n} ","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <div><input className='search' type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}));\n  }\n\n  handleChange= (e) => {\n    this.setState({searchField:e.target.value});\n  }\n\n  render() {\n    const {robots, searchField} = this.state;\n    const filteredRobots = robots.filter(robot => \n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Robots Rolodex</h1>\n      <SearchBox placeholder='Search Robots'\n        handleChange={this.handleChange}/>\n      <CardList robots={filteredRobots}>\n      </CardList>\n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}